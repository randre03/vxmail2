{
  "name": "spamc",
  "version": "0.0.3",
  "author": {
    "name": "Carl Glaysher",
    "email": "carl@coxeh.com"
  },
  "description": "Compute the spamassassin spam score of an email",
  "contributors": [
    {
      "name": "Carl Glaysher",
      "email": "carl@coxeh.com"
    },
    {
      "name": "Florent Galland",
      "email": "flolagale@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Flolagale/spamc.git"
  },
  "main": "index.js",
  "keywords": [
    "spamd",
    "spamc",
    "spamassassin",
    "email",
    "spam"
  ],
  "readme": "# spamc\n\n*This is a fork from [coxeh/node-spamc](https://github.com/coxeh/node-spamc) just to publish it to npm.*\n\nspamc is a nodejs module that connects to spamassassin's spamd daemon using the spamc interface. You are able to:\n\n  - Check a message for a spam score and return back what spamassassin matched on\n  - Ability to send messages to spamassassin to learn from\n  - Ability to do everything that `spamc` is capable of\n\nNote that the native spamassassin and spamc package must be available on your machine. On Debian / Ubuntu:\n\n```\nsudo aptitude install spamassassin spamc\n```\n\nthen something like:\n\n```\nsudo npm install --save spamc\n```\n\n## Commands Available\n\n  - `check` checks a message for a spam score and returns an object of information\n  - `symbols` like `check` but also returns what the message matched on\n  - `report` like `symbols` but matches also includes a small description\n  - `reportIfSpam` only returns a result if message is spam\n  - `process` like `check` but also returns a processed message with extra headers\n  - `headers` like `check` but also returns the message headers in a array\n  - `learn` abilty to parse a message to spamassassin and learn it as spam or ham\n  - `tell` ability to tell spamassassin that the message is spam\n  - `revoke` abilty to tell spamassassin that the message is not spam\n\n\n## Example\n\nThis example will parse a message to spamassassin to perform a report and will callback on success.\n\n```javascript\n  var Spamc = require('spamc');\n  var spamc = new Spamc();\n\n  spamc.report('My full email message as a string', function (result) {\n      console.log(result);\n  });\n```\n\n\n    \n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/Flolagale/spamc/issues"
  },
  "homepage": "https://github.com/Flolagale/spamc",
  "_id": "spamc@0.0.3",
  "_shasum": "897a03f4aff25f878ec26d1f1d939d95533ab6c7",
  "_from": "spamc@0.0.3",
  "_resolved": "https://registry.npmjs.org/spamc/-/spamc-0.0.3.tgz"
}
